// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM8[address(t)](t)
 *     Write: If load(t-1) then RAM8[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load == 1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address,
        a=l0, b=l1, c=l2, d=l3,
        e=l4, f=l5, g=l6, h=l7);

   Register(in=in, load=l0, out=out0); 
   Register(in=in, load=l1, out=out1); 
   Register(in=in, load=l2, out=out2); 
   Register(in=in, load=l3, out=out3); 
   Register(in=in, load=l4, out=out4); 
   Register(in=in, load=l5, out=out5); 
   Register(in=in, load=l6, out=out6); 
   Register(in=in, load=l7, out=out7); 

    Mux8Way16(
        a=out0,
        b=out1,
        c=out2,
        d=out3,
        e=out4,
        f=out5,
        g=out6,
        h=out7,
        sel=address,
        out=out
    );
}
